goal:
if current location is not given permission or takes longer than 30 seconds, ask for location.
Then, when have location one way or another, run function to get list
Also feed current location into list...

if DirectionsStatus == OK
then



{
  origin: current location,
  destination: this.address,
  travelMode: WALKING,
  unitSystem: UnitSystem.IMPERIAL,
  provideRouteAlternatives: false,
  region: String
}

{% verbatim %}
    <script id="handlebarsTest" type="text/x-handlebars-template">
        {{#each .}}
            <button type="button" class="btn btn-info btn-lg redBtn" data-toggle="modal" data-target="#foodModal{{@index}}">{{this.providername}}</button>
            <p class="list-information">{{this.times}}</p>
            <div id="foodModal{{@index}}" class="modal fade" role="dialog">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <button type="button" class="close" data-dismiss="modal">&times;</button>
                            <h4 class="modal-title">{{this.providername}}</h4>
                        </div>
                        <div class="modal-body">
                            <p>{{this.address}}</p>
                            <p id="dist{{@index}}">Distance{{showDistance this.address @index }}</p>
                            <p>{{this.website}}</p>
                            <p>{{this.phone_number}}</p>
                            <iframe src="//www.google.com/maps/embed/v1/place?q={{this.address}}
                                &zoom=17
                                &key=AIzaSyBjUkLmUDYWsijYFWknWvVvjjeiYZWyCZM">
                            </iframe>
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-default closes" data-dismiss="modal">Close</button>
                        </div>
                    </div>
                </div>
            </div>
            <p class="list-information">{{this.description_text}}</p>
        {{/each}}
    </script>
{% endverbatim %}



//directions map

//
// function makeMap(address,id){
//     var objectforgoogle = {
//       origin: currentlatitudef + ',' + currentlongitudef,
//       destination: this.address,
//       travelMode: WALKING,
//       unitSystem: UnitSystem.IMPERIAL,
//       provideRouteAlternatives: false,
//       region: String
//     }
//     var splitAddress = address.split(' ')
//     var joinAddress = splitAddress.join('+')
//     var ronald = currentlatitudef + ',' + currentlongitudef
//     console.log(ronald)
//     // return joinAddress
//     $.getJSON("https://maps.googleapis.com/maps/api/distancematrix/json?units=imperial&origins="+ronald+"&destinations="+joinAddress).done(function(results){
//         var distance = results['rows'][0]['elements'][0]['distance'].text
//         $("#dist" + id).html(distance)
//     })
// }
//
//
//
// Handlebars.registerHelper("showMap", function(address, id) {
//     console.log(address)
//     makeMap(address, id)
// })
//
//
//
// var directionsDisplay;
// var directionsService = new google.maps.DirectionsService();
// var map;
//
// function initialize() {
//   directionsDisplay = new google.maps.DirectionsRenderer();
//   var chicago = new google.maps.LatLng(41.850033, -87.6500523);
//   var mapOptions = {
//     zoom:7,
//     center: chicago
//   }
//   map = new google.maps.Map(document.getElementById('map'), mapOptions);
//   directionsDisplay.setMap(map);
// }
//
// function calcRoute() {
//   var start = document.getElementById('start').value;
//   var end = document.getElementById('end').value;
//   var request = {
//     origin: start,
//     destination: end,
//     travelMode: 'DRIVING'
//   };
//   directionsService.route(request, function(result, status) {
//     if (status == 'OK') {
//       directionsDisplay.setDirections(result);
//     }
//   });
// }
